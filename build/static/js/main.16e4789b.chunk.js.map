{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavio","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","messageClass","alt","src","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAaAA,IAASC,cAAc,CACrBC,OAAQ,0CACNC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKnB,IAAMC,EAAMT,IAASS,OACfC,EAAYV,IAASU,YAsB3B,SAASC,IAOP,OACE,qCACA,wBAAQC,UAAW,UAAUC,QARN,WACvB,IAAMC,EAAW,IAAId,IAASS,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAMrB,iCACA,2GAIJ,SAASG,IACP,OAAOR,EAAKS,aACV,wBAAQN,UAAU,WAAWC,QAAU,kBAAKJ,EAAKU,WAAjD,sBAIJ,SAASC,IACP,IAAMC,EAAOC,mBACPC,EAAcb,EAAUc,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,KAErD,EAAkBC,YAAkBH,EAAQ,CAACI,QAAS,OAA/CC,EAAP,oBAEA,EAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAElBD,EAAEE,iBAFgB,EAII5B,EAAKS,YAApBoB,EAJW,EAIXA,IAAIC,EAJO,EAIPA,SAJO,SAKZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAW1C,IAASU,UAAUiC,WAAWC,kBACzCN,MACAC,aATgB,OAWlBN,EAAa,IACbZ,EAAMwB,QAAQC,eAAe,CAACC,QAAS,WAZrB,2CAAH,sDAgBjB,OACE,qCAEJ,iCACGjB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA4BC,QAASF,GAAjBA,EAAIG,OACzD,sBAAMC,IAAKhC,OAGb,uBAAMiC,SAAUpB,EAAhB,UACE,uBAAOqB,MAAQvB,EAAWwB,SAAU,SAACrB,GAAD,OAAMF,EAAaE,EAAEsB,OAAOF,QAASG,YAAY,oBACrF,wBAAQC,KAAK,SAAUC,UAAW5B,EAAlC,wBAQF,SAASkB,EAAYW,GACnB,MAA+BA,EAAMV,QAA9BV,EAAP,EAAOA,KAAMH,EAAb,EAAaA,IAAMC,EAAnB,EAAmBA,SACbuB,EAAexB,IAAQ7B,EAAKS,YAAYoB,IAAM,OAAS,WAC7D,OAAQ,mCACN,sBAAK1B,UAAS,kBAAckD,GAA5B,UACE,qBAAKC,IAAK,aAAaC,IAAKzB,GAAY,0DACxC,4BAAIE,SAMKwB,MA7Ff,WAGE,MAAcC,YAAazD,GAApB0D,EAAP,oBACA,OACE,sBAAKvD,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACA,0DACE,cAACK,EAAD,OAEF,kCACGkD,EAAO,cAAC/C,EAAD,IAAc,cAACT,EAAD,UC5BfyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.16e4789b.chunk.js","sourcesContent":["\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\nimport React, { useState,useRef } from \"react\";\n\n\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDM7Foe5mDk35eK3iwamNrUGgQWthpJp9Y\",\n    authDomain: \"superchat-c0a3b.firebaseapp.com\",\n    projectId: \"superchat-c0a3b\",\n    storageBucket: \"superchat-c0a3b.appspot.com\",\n    messagingSenderId: \"334347904681\",\n    appId: \"1:334347904681:web:d449d62a09ae5be5ababb8\",\n    measurementId: \"G-9BEEFRN8FL\"\n\n\n})\n\nconst auth= firebase.auth();\nconst firestore = firebase.firestore();\n\n\nfunction App() {\n\n\n  const [user]= useAuthState(auth);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>Depth Yeah Random Chat !</h1>\n        <SignOut />\n      </header>\n      <section>\n        {user ? <ChatRoom/> : <SignIn/> }\n      </section>\n\n\n    </div>\n  );\n}\n\nfunction SignIn(){\n  const signInWithGoogle = ()=>{\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n\n  }\n\n  return (\n    <>\n    <button className =\"sign-in\" onClick ={signInWithGoogle}>Sign in with Google</button>\n    <p>Do not violate the community guidelines or you will be banned for life!</p>\n    </>\n  )\n}\nfunction SignOut(){\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick ={()=> auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom(){\n  const dummy =useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(10000);\n\n  const [messages]= useCollectionData(query , {idField: 'id'});\n\n  const [formValue, setFormValue] =useState('');\n  const sendMessage = async(e) =>{\n\n    e.preventDefault();\n\n    const {uid,photoURL}= auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n    setFormValue('');\n    dummy.current.scrollIntoView({behavio: 'smooth'});\n\n  }\n\n  return (\n    <>\n\n<main>\n  {messages && messages.map(msg => <ChatMessage  key ={msg.id} message={msg}/>)}\n  <span ref={dummy}></span>\n</main>\n\n<form onSubmit={sendMessage}>\n  <input value ={formValue} onChange={(e)=> setFormValue(e.target.value)}  placeholder=\"say something !\"/>\n  <button type='submit'  disabled={!formValue}>Send</button>\n</form>\n\n</>\n  )\n \n}\n\nfunction ChatMessage(props){\n  const {text, uid , photoURL} = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'reveived';\n  return( <>\n    <div className ={`message ${messageClass}`}>\n      <img alt =\"workplease\" src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'}/>\n      <p>{text}</p>\n    </div> \n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}